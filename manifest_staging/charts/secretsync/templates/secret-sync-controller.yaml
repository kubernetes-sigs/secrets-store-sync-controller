apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kuberentes.io/instance: controller-manager
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: secret-sync-controller
    app.kubernetes.io/name: serviceaccount
    app.kubernetes.io/part-of: secret-sync-controller
    secrets-store.io/system: "true"
  name: "secret-sync-controller-manager"
  namespace: {{ .Values.namespace }}
  annotations:
    
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: secret-sync-controller-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - patch
- apiGroups:
  - ""
  resources:
  - serviceaccounts/token
  verbs:
  - create
- apiGroups:
  - secrets-store.csi.x-k8s.io
  resources:
  - secretproviderclasses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - secret-sync.x-k8s.io
  resources:
  - secretsyncs
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - secret-sync.x-k8s.io
  resources:
  - secretsyncs/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: secret-sync-controller
    app.kubernetes.io/instance: manager-rolebinding
    
    app.kubernetes.io/name: clusterrolebinding
    app.kubernetes.io/part-of: secret-sync-controller
    secrets-store.io/system: "true"
  name: secret-sync-controller-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: secret-sync-controller-manager-role
subjects:
  {{- include "secret-sync-controller.subjects" . | nindent 2 }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: secret-sync-controller-manager
  namespace: {{ .Values.namespace }}
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: secret-sync-controller
    control-plane: controller-manager
    app.kubernetes.io/name: deployment
    app.kubernetes.io/part-of: secret-sync-controller
    app.kubernetes.io/instance: controller-manager
    secrets-store.io/system: "true"
spec:
  selector:
    matchLabels:
      control-plane: controller-manager
      secrets-store.io/system: "true"
  replicas: 1
  template:
    metadata:
      annotations: 
        {{- toYaml .Values.podAnnotations | nindent 8 }}
      labels:
        {{- toYaml .Values.podLabels | nindent 8 }}
    spec:
      nodeSelector:
        kubernetes.io/os: linux
{{- if .Values.nodeSelector }}
{{- toYaml .Values.nodeSelector | nindent 8 }}
{{- end }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      containers:
      {{- if and .Values.providerContainer (gt (len .Values.providerContainer) 0) }}
      {{- toYaml .Values.providerContainer | nindent 6 }}
      {{- end }}
      - name: manager
        image: {{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        args:
        - --provider-volume=/provider
        - --token-request-audience={{ include "secret-sync-controller.listToString" . }}
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:{{ .Values.metricsPort }}
        - --leader-elect
        - --rotation-poll-interval-in-seconds={{ .Values.rotationPollInterval }}
        env:
          - name: SYNC_CONTROLLER_POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: SYNC_CONTROLLER_POD_UID
            valueFrom:
              fieldRef:
                fieldPath: metadata.uid
          - name: SYNC_CONTROLLER_POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
        ports:
        - name: metrics
          containerPort: {{ .Values.metricsPort }}
          protocol: TCP
        securityContext:
          {{- toYaml .Values.securityContext | nindent 10 }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        command:
        - /manager
{{- with .Values.resources }}
        resources:
{{ toYaml . | indent 10 }}
{{- end }}
        volumeMounts:
        - mountPath: "/provider"
          name: providervol
      serviceAccountName: "secret-sync-controller-manager"
      terminationGracePeriodSeconds: 10
      volumes:
      - name: providervol
        hostPath:
          path: "/var/run/secrets-store-sync-providers"
          type: DirectoryOrCreate
